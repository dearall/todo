ext {
    mavenRepoUrl = "$mavenBaseUrl/sansovo-demo"
    mavenSnapshotRepoUrl = "$mavenBaseUrl/dearall-snapshots"
    mavenReleaseRepoUrl = "$mavenBaseUrl/dearall-releases"

    artifactoryUsername = project.hasProperty('maven_publish_userName') ? project.getProperty('maven_publish_userName') : null
    artifactoryPassword = project.hasProperty('maven_publish_userPassword') ? project.getProperty('maven_publish_userPassword') : null
}

allprojects {
    group = 'com.manning.gia'
    apply from: "$rootDir/gradle/versioning.gradle"

    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'todo.java-conventions'
    apply plugin: 'distribution'
    apply plugin: 'maven-publish'

//    sourceCompatibility = JavaVersion.VERSION_1_8
//    targetCompatibility = JavaVersion.VERSION_1_8

    task sourcesJar(type: Jar) {
        archiveBaseName.value project.name
        classifier 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveBaseName.value project.name
        classifier 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }


// id 'distribution'
    distributions {
        main {
            distributionBaseName = archivesBaseName
            contents {
                from{
                    libsDirectory
                }
            }
        }
        docs {
            distributionBaseName = "$archivesBaseName-docs"
            contents {
                from(libsDirectory) {
                    include sourcesJar.archiveFileName.get()
                    include javadocJar.archiveFileName.get()
                }
            }
        }
    }

    distTar.dependsOn(jar,sourcesJar,javadocJar)
    distZip.dependsOn(jar,sourcesJar,javadocJar)
    docsDistTar.dependsOn(jar,sourcesJar,javadocJar)
    docsDistZip.dependsOn(jar,sourcesJar,javadocJar)

    task createBuildInfoFile {
        doLast {
            def buildInfoFile = new File("$buildDir/build-info.properties")
            Properties props = new Properties()
            props.setProperty('version', project.version.toString())
            props.setProperty('build', project.version.build ?: '')
            props.setProperty('timestamp', project.buildTimestamp)
            props.store(buildInfoFile.newWriter(), null)
        }
    }

    ext.configDir = new File(rootDir, 'config')

    apply from: "$rootDir/gradle/jacoco.gradle"
    apply from: "$rootDir/gradle/checkstyle.gradle"
    apply from: "$rootDir/gradle/pmd.gradle"

    task reportAll(){
        dependsOn(jacocoTestReport, checkstyleMain, checkstyleTest,pmdMain,pmdTest)
        group("Reports")
    }

    // id 'maven-publish'
    publishing {
        repositories {
//        maven {
//            name 'myLocal'
//            url "file://$projectDir/repo"
//        }
            maven {
                name 'sansovoMaven'
//            url project.version.toString().endsWith('-SNAPSHOT') ? mavenSnapshotRepoUrl : mavenReleaseRepoUrl
                url mavenRepoUrl

                credentials {
                    username = artifactoryUsername
                    password = artifactoryPassword
                }

                allowInsecureProtocol = true
            }
        }
    }
	
    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
    }
}